# Setting java 1.8
language: android
jdk:
  - oraclejdk8

sudo: required # disables container-based builds which have a maximum of 4GB of memory
# caching as advised by travis
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

# env:
#   global:
#     - ANDROID_API_LEVEL=27
#     - ANDROID_BUILD_TOOLS_VERSION=27.0.3
#     - ADB_INSTALL_TIMEOUT=20 # wait up to 20 minutes for adb to connect to emulator (2 minutes by default)
#     - ANDROID_ABI=armeabi-v7a

# matrix:
#   include:
   # - name: "Android 24"
   #   env: EMULATOR_API_LEVEL=24  ANDROID_EMULATOR_IMAGE=sys-img-armeabi-v7a-android-24
   # - name: "Android 23"
   #   env: EMULATOR_API_LEVEL=23  ANDROID_EMULATOR_IMAGE=sys-img-armeabi-v7a-android-23
    # - name: "Android 22"
    #   env: EMULATOR_API_LEVEL=22  ANDROID_EMULATOR_IMAGE=sys-img-armeabi-v7a-android-22
   # - name: "Android 25"
   #   env: EMULATOR_API_LEVEL=25  ANDROID_EMULATOR_IMAGE=sys-img-armeabi-v7a-android-25
    # - name: "Android 25 google"
    #   env: EMULATOR_API_LEVEL=android-25  ANDROID_EMULATOR_IMAGE=system-images;android-25;google_apis;armeabi-v7a
    # - name: "Android 24 google"
    #   env: EMULATOR_API_LEVEL=android-25  ANDROID_EMULATOR_IMAGE=system-images;android-24;google_apis;armeabi-v7a

# allow_failures: # these stall often or have some other flaky problems
#   - env: EMULATOR_API_LEVEL=24  ANDROID_EMULATOR_IMAGE=sys-img-armeabi-v7a-android-24
#   - env: EMULATOR_API_LEVEL=23  ANDROID_EMULATOR_IMAGE=sys-img-armeabi-v7a-android-23

# android:
#   components:
#   # Base components
#       # - tools # to get the new `repository-11.xml`
#       - tools # https://github.com/travis-ci/travis-ci/issues/6040#issuecomment-219367943)
#       - platform-tools
#       - build-tools-$ANDROID_BUILD_TOOLS_VERSION # get the build tools version to build the project
  # # used sdk versions
  #     - android-$ANDROID_API_LEVEL # get the android sdk version to build the project
  #     - android-$EMULATOR_API_LEVEL # get the android sdk version for the emulator
  # Get the latest version of additional components
      # - extra-android-support
      # - extra-google-m2repository
      # - extra-android-m2repository
      # - extra-google-google_play_services
  # Specify the needed emulator
      # - $ANDROID_EMULATOR_IMAGE
      # - "system-images;android-"$EMULATOR_API_LEVEL";google_apis;armeabi-v7a"
  # licenses:
  #   - 'android-sdk-license-.+'
  #   - '.+'

# Emulator Management: Create, Start and Wait
# before_install:
#   - echo $EMULATOR_API_LEVEL
#   - echo $ANDROID_ABI
#   - yes | sdkmanager "platforms;android-27"
#   - yes | sdkmanager "platforms;android-28"
  # - yes | sdkmanager "platforms;android-26"
#  - yes | sdkmanager --update
# install:
#   - sdkmanager --list || true # List all available targets, device definitions and AVDs.
# # Update sdk tools to latest version and install/update components
#   - export
#   - echo yes | sdkmanager "tools"
#   - echo yes | sdkmanager "platform-tools"
#   - echo yes | sdkmanager "build-tools;"$ANDROID_BUILD_TOOLS_VERSION
#   - echo yes | sdkmanager "platforms;android-"$ANDROID_API_LEVEL # Latest platform required by SDK tools
#   - echo yes | sdkmanager "extras;android;m2repository"
#   - echo yes | sdkmanager "extras;google;m2repository"
#   - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2"
#   - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2"
#   - echo yes | sdkmanager --update
#   - echo yes | sdkmanager --licenses
# # Check components status
  # - sdkmanager --list || true

# before_script:
# Create and start the emulator
  # - android list targets
  # - echo y | android list sdk
  # - sdkmanager "system-images;android-"$EMULATOR_API_LEVEL";google_apis;armeabi-v7a"
  # - echo no | avdmanager -v create avd -f -n test -k "system-images;android-"$EMULATOR_API_LEVEL";google_apis;armeabi-v7a"
  # - echo no | android create avd --force -n test -t android-$EMULATOR_API_LEVEL --abi $ANDROID_ABI
  # - echo no | avdmanager -v create avd -f -n test -k $ANDROID_EMULATOR_IMAGE
  # - emulator -avd test -no-window &
  # - emulator -avd test -no-audio -no-window &
  # - android-wait-for-emulator
# Turn off animations
  # - adb shell settings put global window_animation_scale 0 &
  # - adb shell settings put global transition_animation_scale 0 &
  # - adb shell settings put global animator_duration_scale 0 &
# Wake up
  # - adb shell input keyevent 82 &
  # - adb shell input keyevent 1 &

matrix:
  include:
   - env: EMULATOR_API_LEVEL=22  ANDROID_ABI="default;arm64-v8a"
   - env: EMULATOR_API_LEVEL=22  ANDROID_ABI="default;armeabi-v7a"
   - env: EMULATOR_API_LEVEL=24  ANDROID_ABI="default;arm64-v8a"
   - env: EMULATOR_API_LEVEL=24  ANDROID_ABI="default;armeabi-v7a"
   - env: EMULATOR_API_LEVEL=24  ANDROID_ABI="google_apis;arm64-v8a"
   - env: EMULATOR_API_LEVEL=24  ANDROID_ABI="google_apis;armeabi-v7a"
   - env: EMULATOR_API_LEVEL=25  ANDROID_ABI="google_apis;arm64-v8a"
   - env: EMULATOR_API_LEVEL=25  ANDROID_ABI="google_apis;armeabi-v7a"


before_install:
  - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
  # Install the Android SDK Dependency.
  - export ANDROID_HOME=/opt/android-sdk-linux
  - cd /opt
  - wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - cd -
  - PATH=${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}
  # Silence warning.
  - mkdir -p ~/.android
  - touch ~/.android/repositories.cfg
  # Accept licenses before installing components, no need to echo y for each component
  - yes | sdkmanager --licenses
  # Platform tools
  - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
  - sdkmanager --list | head -15
  # install older packages (for emulator)
  - sdkmanager "build-tools;25.0.2" "platforms;android-25" > /dev/null
  # Create and start emulator.
  - sdkmanager "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI" > /dev/null
  - sdkmanager --list | head -15
  - echo no | avdmanager create avd --force -n test -k "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI"
  - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader &

script:
  - sleep 5
  - adb shell logcat -c
  - adb shell logcat -v time &
  - adb install -t app-debug.apk
  - adb shell am start org.elastos.trinity.runtime/.MainActivity
  - sleep 20

